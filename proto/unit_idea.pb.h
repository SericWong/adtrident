// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: unit_idea.proto

#ifndef PROTOBUF_unit_5fidea_2eproto__INCLUDED
#define PROTOBUF_unit_5fidea_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "xbuiltin-options.pb.h"
#include <xbuiltin/Utils.h>
// @@protoc_insertion_point(includes)

namespace ad {
namespace rtb {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_unit_5fidea_2eproto();
void protobuf_AssignDesc_unit_5fidea_2eproto();
void protobuf_ShutdownFile_unit_5fidea_2eproto();

class unit_idea;

// ===================================================================

class unit_idea : public ::google::protobuf::Message {
 public:
  unit_idea();
  virtual ~unit_idea();
  
  unit_idea(const unit_idea& from);
  
  inline unit_idea& operator=(const unit_idea& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const unit_idea& default_instance();
  
  void Swap(unit_idea* other);
  
  // implements Message ----------------------------------------------
  
  unit_idea* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const unit_idea& from);
  void MergeFrom(const unit_idea& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint64 unitid = 1;
  inline bool has_unitid() const;
  inline void clear_unitid();
  static const int kUnitidFieldNumber = 1;
  inline ::google::protobuf::uint64 unitid() const;
  inline void set_unitid(::google::protobuf::uint64 value);
  
  // repeated uint64 ideaid = 2;
  inline int ideaid_size() const;
  inline void clear_ideaid();
  static const int kIdeaidFieldNumber = 2;
  inline ::google::protobuf::uint64 ideaid(int index) const;
  inline void set_ideaid(int index, ::google::protobuf::uint64 value);
  inline void add_ideaid(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      ideaid() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_ideaid();
  
  static inline int generate_keysign(const uint64_t xdict_unitid, uint64_t *output) {
    if (::xbuiltin::make_sign64(xdict_unitid, output) < 0) {
      return -1;
    }
    return 0;
  }
  int generate_keysign(uint64_t *output) {
    return generate_keysign(unitid(), output);
  }
  void clear_optionals() {
  }
  int load_tsl(char *&str) {
    // unitid
    uint64_t xdict_unitid_value;
    if (::xbuiltin::xconvert(str, &xdict_unitid_value) < 0) {
      return -1;
    }
    set_unitid(xdict_unitid_value);
    // ideaid
    uint64_t xdict_ideaid_value;
    bool ideaid_has_bracket = false;
    if (str && *str == '[') {
      if (*(str+1) != '\t') {
        return -1;
      }
      ideaid_has_bracket = true;
      ::xbuiltin::skip_separator(str, str+1);
    }
    while (str && !(*str == ']' && ::xbuiltin::valid_separator(*(str+1)))) {
      if (::xbuiltin::xconvert(str, &xdict_ideaid_value) < 0) {
        return -1;
      }
      add_ideaid(xdict_ideaid_value);
    }
    if (ideaid_has_bracket) {
      if (str == NULL || !(*str == ']' && ::xbuiltin::valid_separator(*(str+1)))) {
        return -1;
      } else {
        ::xbuiltin::skip_separator(str, str+1);
      }
    }
    return 0;
  }
  // @@protoc_insertion_point(class_scope:ad.rtb.unit_idea)
 private:
  inline void set_has_unitid();
  inline void clear_has_unitid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint64 unitid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > ideaid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_unit_5fidea_2eproto();
  friend void protobuf_AssignDesc_unit_5fidea_2eproto();
  friend void protobuf_ShutdownFile_unit_5fidea_2eproto();
  
  void InitAsDefaultInstance();
  static unit_idea* default_instance_;
};
// ===================================================================


// ===================================================================

// unit_idea

// required uint64 unitid = 1;
inline bool unit_idea::has_unitid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void unit_idea::set_has_unitid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void unit_idea::clear_has_unitid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void unit_idea::clear_unitid() {
  unitid_ = GOOGLE_ULONGLONG(0);
  clear_has_unitid();
}
inline ::google::protobuf::uint64 unit_idea::unitid() const {
  return unitid_;
}
inline void unit_idea::set_unitid(::google::protobuf::uint64 value) {
  set_has_unitid();
  unitid_ = value;
}

// repeated uint64 ideaid = 2;
inline int unit_idea::ideaid_size() const {
  return ideaid_.size();
}
inline void unit_idea::clear_ideaid() {
  ideaid_.Clear();
}
inline ::google::protobuf::uint64 unit_idea::ideaid(int index) const {
  return ideaid_.Get(index);
}
inline void unit_idea::set_ideaid(int index, ::google::protobuf::uint64 value) {
  ideaid_.Set(index, value);
}
inline void unit_idea::add_ideaid(::google::protobuf::uint64 value) {
  ideaid_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
unit_idea::ideaid() const {
  return ideaid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
unit_idea::mutable_ideaid() {
  return &ideaid_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rtb
}  // namespace ad

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_unit_5fidea_2eproto__INCLUDED
