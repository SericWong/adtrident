// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "business_ad.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ad {
namespace rtb {

namespace {

const ::google::protobuf::Descriptor* business_ad_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  business_ad_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_business_5fad_2eproto() {
  protobuf_AddDesc_business_5fad_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "business_ad.proto");
  GOOGLE_CHECK(file != NULL);
  business_ad_descriptor_ = file->message_type(0);
  static const int business_ad_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(business_ad, business_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(business_ad, unitid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(business_ad, bid_),
  };
  business_ad_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      business_ad_descriptor_,
      business_ad::default_instance_,
      business_ad_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(business_ad, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(business_ad, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(business_ad));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_business_5fad_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    business_ad_descriptor_, &business_ad::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_business_5fad_2eproto() {
  delete business_ad::default_instance_;
  delete business_ad_reflection_;
}

void protobuf_AddDesc_business_5fad_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::xbuiltin::protobuf_AddDesc_xbuiltin_2doptions_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021business_ad.proto\022\006ad.rtb\032\026xbuiltin-op"
    "tions.proto\"I\n\013business_ad\022\020\n\010business\030\001"
    " \002(\014\022\016\n\006unitid\030\002 \003(\004\022\013\n\003bid\030\003 \003(\004:\013\322>\010bu"
    "siness", 126);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "business_ad.proto", &protobuf_RegisterTypes);
  business_ad::default_instance_ = new business_ad();
  business_ad::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_business_5fad_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_business_5fad_2eproto {
  StaticDescriptorInitializer_business_5fad_2eproto() {
    protobuf_AddDesc_business_5fad_2eproto();
  }
} static_descriptor_initializer_business_5fad_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int business_ad::kBusinessFieldNumber;
const int business_ad::kUnitidFieldNumber;
const int business_ad::kBidFieldNumber;
#endif  // !_MSC_VER

business_ad::business_ad()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void business_ad::InitAsDefaultInstance() {
}

business_ad::business_ad(const business_ad& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void business_ad::SharedCtor() {
  _cached_size_ = 0;
  business_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

business_ad::~business_ad() {
  SharedDtor();
}

void business_ad::SharedDtor() {
  if (business_ != &::google::protobuf::internal::kEmptyString) {
    delete business_;
  }
  if (this != default_instance_) {
  }
}

void business_ad::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* business_ad::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return business_ad_descriptor_;
}

const business_ad& business_ad::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_business_5fad_2eproto();  return *default_instance_;
}

business_ad* business_ad::default_instance_ = NULL;

business_ad* business_ad::New() const {
  return new business_ad;
}

void business_ad::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_business()) {
      if (business_ != &::google::protobuf::internal::kEmptyString) {
        business_->clear();
      }
    }
  }
  unitid_.Clear();
  bid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool business_ad::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required bytes business = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_business()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_unitid;
        break;
      }
      
      // repeated uint64 unitid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_unitid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16, input, this->mutable_unitid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_unitid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_unitid;
        if (input->ExpectTag(24)) goto parse_bid;
        break;
      }
      
      // repeated uint64 bid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_bid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24, input, this->mutable_bid())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_bid())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_bid;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void business_ad::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required bytes business = 1;
  if (has_business()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->business(), output);
  }
  
  // repeated uint64 unitid = 2;
  for (int i = 0; i < this->unitid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->unitid(i), output);
  }
  
  // repeated uint64 bid = 3;
  for (int i = 0; i < this->bid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->bid(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* business_ad::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required bytes business = 1;
  if (has_business()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->business(), target);
  }
  
  // repeated uint64 unitid = 2;
  for (int i = 0; i < this->unitid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(2, this->unitid(i), target);
  }
  
  // repeated uint64 bid = 3;
  for (int i = 0; i < this->bid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(3, this->bid(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int business_ad::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required bytes business = 1;
    if (has_business()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->business());
    }
    
  }
  // repeated uint64 unitid = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->unitid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->unitid(i));
    }
    total_size += 1 * this->unitid_size() + data_size;
  }
  
  // repeated uint64 bid = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->bid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->bid(i));
    }
    total_size += 1 * this->bid_size() + data_size;
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void business_ad::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const business_ad* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const business_ad*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void business_ad::MergeFrom(const business_ad& from) {
  GOOGLE_CHECK_NE(&from, this);
  unitid_.MergeFrom(from.unitid_);
  bid_.MergeFrom(from.bid_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_business()) {
      set_business(from.business());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void business_ad::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void business_ad::CopyFrom(const business_ad& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool business_ad::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void business_ad::Swap(business_ad* other) {
  if (other != this) {
    std::swap(business_, other->business_);
    unitid_.Swap(&other->unitid_);
    bid_.Swap(&other->bid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata business_ad::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = business_ad_descriptor_;
  metadata.reflection = business_ad_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rtb
}  // namespace ad

// @@protoc_insertion_point(global_scope)
